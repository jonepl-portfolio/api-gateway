name: CI

on:
  push:
    branches: 
      - "main" 
      - "**"
  pull_request:
    branches: 
      - main
# // ${{ secrets.DOCKER_USERNAME }}
jobs:
  compare-versions:
    name: Check Image Version Incremented
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Version
        run: |
          # Fetch the current version from the VERSION file
          current_version=$(cat VERSION)

          # Fetch the previous semantic version (excluding 'latest') from Docker images
          previous_version=$(docker image ls --filter "reference=${{ secrets.DOCKER_USERNAME }}/api-gateway" --format "{{.Repository}}:{{.Tag}}" | awk -F ':' '{print $2}' | grep -v 'latest' | sort -rV | head -n 1)

          # Function to compare semantic versions
          version_greater() {
              IFS='.' read -r -a current_parts <<< "$1"
              IFS='.' read -r -a previous_parts <<< "$2"

              for ((i=0; i<${#current_parts[@]}; i++)); do
                  if [[ ${current_parts[$i]} -gt ${previous_parts[$i]} ]]; then
                      return 0
                  elif [[ ${current_parts[$i]} -lt ${previous_parts[$i]} ]]; then
                      return 1
                  fi
              done

              return 1
          }

          # Compare the current and previous versions
          if version_greater "$current_version" "$previous_version"; then
              echo "The version has been properly incremented: $previous_version -> $current_version"
          else
              echo "Error: The version has not been incremented properly: $previous_version -> $current_version"
              exit 1
          fi

  build-docker-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [ "compare-versions" ]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:$current_version -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest .
          docker save --output versioned.docker ${{ secrets.DOCKER_USERNAME }}/api-gateway:$current_version
          docker save --output latest.docker ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          VERSION: $current_version

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-images
          path: |
            versioned.docker
            latest.docker

  push-docker-image:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: build-docker-image
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: docker-images

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker load --input ./versioned.docker
          docker load --input ./latest.docker
          current_version=$(cat VERSION)
          docker push ${{ secrets.DOCKER_USERNAME }}/web-portfolio:$current_version
          docker push ${{ secrets.DOCKER_USERNAME }}/web-portfolio:latest

      